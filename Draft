Describing your project and the functionality you implemented.
Include both required and optional features, along with descriptions of each. 



For this project, our team has chosen the option 2.
The second option is to implement a learning management system quiz tool, which allows teachers to present information in a variety of formats to evaluate student progress. 
To accomplish this, we have constructed a total of seven classes: MainMenu, Login, User, Course, CourseInfoHandler, Question and Quiz.
The MainMenu class is the main menu where the user will login or create an account. 
It will ask the user whether he/she is a teacher, and depending on the answer the menu will display different options.
If the user is a teacher, he/she has the access to the quiz menu where he/she may modify(edit/create/delete) quizzes and view student submissions.
The general features of the main menu are account settings and quizzes, which will be explained in further detail in the Login class and the Quiz class, respectively.
The Login class provides several useful methods that are used for the account settings.
Along with the general account modifications, it also checks for any redundant user details and removes them. 
The User class provides a constructor that helps the system differentiate between the teacher and the student. 
The next two classes are the Quiz class and the Question class.
The Question class provides a question constructor, which is used in the Course class, and initializes the following attributes: the prompt, the weight, the answer and the student's response to a question.
The class features some useful methods as getters and setters and an equals method that checks whether the given object is an instance of the Question class. 
The class also provides a randomization method that the teachers can choose to implement to change the potential options for a question. 
The Quiz class has a similar structure to that of the Question class and provides a quiz constructor that initializes the following attributes: the name of the quiz and the a list of questions to the corresponing quiz.
The class features the basic getters and setters, an equals method that checks whether the given object is an instance of the Quiz class, and an addSubmission method which returns a string of student's submission details. 
Similar to that of the Question class, a randomization method is included to change the order of questions.
Both of the classes deliver a formatted string to the Course class using the toString method.
The Course class mainly features the addQuiz and the removeQuiz methods that add and remove quizzes from the list.
The class provides a course constructor that initialzies the following attributes: the name of the course, the owner (user), and a list of quizzes.
Lastly, the CourseInfoHandler handles the general File I/O of courses and processes course data.   
//The class reads in a file containing a combined string of course details and writes the data into a newly organised file.
